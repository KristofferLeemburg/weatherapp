{"version":3,"sources":["WeatherDetail.js","Search.js","App.js","index.js"],"names":["WeatherDetail","api","lat","lon","useState","weather","setWeather","a","fetch","base","key","then","response","json","result","Icon1","picture","daily","icon","Icon2","Icon3","Icon4","Icon5","Icon6","Icon7","Accordion","Card","Toggle","as","Header","eventKey","onClick","className","Collapse","Body","temp","max","min","day","eve","night","src","alt","style","float","require","config","Search","query","setQuery","setError","error","setLat","setLong","setBgpicture","setTime","type","placeholder","onChange","e","target","value","onKeyPress","evt","renderWeather","length","cod","Error","dt","coord","catch","err","console","log","message","n","process","toString","headers","Authorization","photos","large","App","bgpicture","time","Icon","backgroundImage","backgroundPosition","boxShadow","backgroundSize","backgroundRepeat","main","name","sys","country","Math","round","d","getDay","dates","getDate","month","getMonth","year","getFullYear","Dates","Date","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6aaae5e6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport Accordion from 'react-bootstrap/Accordion'\nimport Card from 'react-bootstrap/Card'\nimport * as Icon from 'react-bootstrap-icons';\n\nfunction WeatherDetail({ api, lat, lon }) {\n  const [weather, setWeather] = useState({});\n\n  \n  async function oneCall() {\n    fetch(`${api.base}onecall?lat=${lat}&lon=${lon}&appid=${api.key}&units=metric`)\n      .then(response => response.json())\n      .then(result => {\n        setWeather(result);\n        // setDayone(result.daily[0].dt) \n        // const tuesday = (new Date(result.daily[1].dt  * 1000))\n        // console.log(time)\n        // console.log(`${monday.getDate()}-${monday.getMonth()}-${monday.getFullYear()}`)\n      }) \n    }\n   \n  const Icon1 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[0].weather[0].icon}.png`\n  }\n  const Icon2 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[1].weather[0].icon}.png`\n  }\n  const Icon3 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[2].weather[0].icon}.png`\n  }\n  const Icon4 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[3].weather[0].icon}.png`\n  }\n  const Icon5 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[4].weather[0].icon}.png`\n  }\n  const Icon6 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[5].weather[0].icon}.png`\n  }\n  const Icon7 = (picture) => {\n    return picture = `http://openweathermap.org/img/wn/${weather.daily[6].weather[0].icon}.png`\n  }\n  // const decoratedOnClick = useAccordionToggle(eventKey, onClick);\n\n  return (\n<div>\n    <Accordion>\n      <Card >\n        <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={oneCall} className=\"accordion\">\n          02-12-2020     \n         \n            <Icon.ArrowDownSquareFill className=\"icons\" />\n          \n        </Accordion.Toggle >\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[0].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[0].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[0].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[0].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[0].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon1(Icon1)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"1\" className=\"accordion\">\n          03-12-2020   <Icon.ArrowDownSquareFill className=\"icons\" />\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[1].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[1].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[1].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[1].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[1].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon2(Icon2)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"2\" className=\"accordion\">\n          04-12-2020   <Icon.ArrowDownSquareFill style={{ float: \"right\" }} />\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"2\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[2].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[2].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[2].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[2].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[2].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon3(Icon3)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"3\" className=\"accordion\">\n          05-12-2020   <Icon.ArrowDownSquareFill style={{ float: \"right\" }} />\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"3\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[3].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[3].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[3].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[3].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[3].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon4(Icon4)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"4\" className=\"accordion\">\n          06-12-2020   <Icon.ArrowDownSquareFill style={{ float: \"right\" }} />\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"4\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[4].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[4].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[4].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[4].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[4].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon5(Icon5)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"5\" className=\"accordion\">\n          07-12-2020   <Icon.ArrowDownSquareFill style={{ float: \"right\" }} />\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"5\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[5].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[5].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[5].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[5].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[5].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon6(Icon6)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Accordion.Toggle as={Card.Header} eventKey=\"6\" className=\"accordion\">\n          08-12-2020<Icon.ArrowDownSquareFill style={{ float: \"right\" }} />\n        </Accordion.Toggle>\n        <Accordion.Collapse eventKey=\"6\">\n          <Card.Body>\n            <p>max temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[6].temp.max) : \"\"}</p>\n            <p>min temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[6].temp.min) : \"\"}</p>\n            <p>day temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[6].temp.day) : \"\"}</p>\n            <p>eve temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[6].temp.eve) : \"\"}</p>\n            <p>night temp = {(typeof weather.daily != \"undefined\") ? (weather.daily[6].temp.night) : \"\"}</p>\n            <p>{(typeof weather.daily != \"undefined\") ? (<img src={Icon7(Icon7)} alt=\"icon\" />) : \"\"}</p>\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n\n    </div>\n  );\n}\nexport default WeatherDetail;","import React from 'react';\nimport './App.css';\nrequire('dotenv').config()\n\nfunction Search({  api, query, setQuery, setError, error, setWeather, setLat, setLong, setBgpicture, setTime }) {\n    \n    function search(evt) {\n        if (evt.key === \"Enter\") {\n            const num = process.env.REACT_APP_API_KEY_2;\n            const n = num.toString();\n            async function renderWeather() {\n                fetch(`${api.base}weather?q=${query}&APPID=${api.key}&units=metric`)\n                    .then(response => response.json())\n                    .then(result => {\n                        if (query.length === 0) {\n                            return setError(true);\n                        }\n                        if (result.cod !== 200) {\n                            throw new Error();\n                        }\n                        setTime(result.dt);\n                        setWeather(result);\n                        setQuery(\"\");\n                        setLat(result.coord.lat);\n                        setLong(result.coord.lon);\n                    })\n                    .catch(err => {\n                        setError(true);\n                        console.log(err.message);\n                        console.log(error);\n                    });\n            } \n            renderWeather();\n\n            function renderPictures() {\n                fetch(`https://api.pexels.com/v1/search?query=${query}`, {\n                    headers: {\n                        Authorization : n,\n                    }\n                })\n                    .then(response => response.json())\n                    .then(result => {\n                        setBgpicture(result.photos[0].src.large);\n                    })\n                    .catch(err => console.log(err));\n            }\n            renderPictures();\n        }\n    }\n        return (\n            <div className=\"search-box\">\n                <input\n                    type=\"text\"\n                    className=\"search-bar\"\n                    placeholder=\"Search for a city...\"\n                    onChange={e => setQuery(e.target.value)}\n                    value={query}\n                    onKeyPress={search}\n                />\n            </div>\n        );\n    }\nexport default Search;","import React, { useState } from 'react';\nimport './App.css';\nimport WeatherDetail from './WeatherDetail'\nimport Search from './Search'\n\nfunction App() {\n  const api = {\n    \"key\": process.env.REACT_APP_API_KEY,\n    base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLong] = useState(\"\");\n  const [bgpicture, setBgpicture] = useState(\"\")\n  const [time, setTime] = useState(\"\")\n  const [error, setError] = useState(false);\n\n\n  const Dates = (d) => {\n    const days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n    const maanden = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const day = days[d.getDay() - 1];\n    const dates = d.getDate();\n    const month = maanden[d.getMonth()];\n    const year = d.getFullYear();\n    return `${day} ${dates} ${month} ${year}`;\n  };\n  const Icon = () => {\n    return `http://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`\n  };\n  // async function times() {\n  //   const tuesday = (new Date(time * 1000))\n  //   console.log(`${tuesday.getDate()}-${tuesday.getMonth()}-${tuesday.getFullYear()}`)\n  // }times()\n  return (\n    <div>\n      <div style={{\n        backgroundImage: `url(${bgpicture})`, backgroundPosition: 'center', boxShadow: \"inset 0 0 0 1000px rgba(0,0,0,.5)\",\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      }}>\n        <main>\n          <Search api={api} setQuery={setQuery} query={query} setError={setError} error={error} setWeather={setWeather} setLat={setLat} setLong={setLong} setBgpicture={setBgpicture} setTime={setTime} />\n          {(typeof weather.main != \"undefined\") ? (\n            <div>\n              <div className=\"location-box\">\n                <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n              </div>\n              <div className=\"weather-box\">\n                <div className=\"weather\">{weather.weather[0].main}</div>\n                <div className=\"container-icon\"><img src={Icon(Icon)} alt=\"icon\" className=\"icon\" /></div>\n                <div className=\"temp\">{Math.round(weather.main.temp)}°</div>\n              </div>\n              <div className=\"date\">{Dates(new Date())}</div>\n            </div>\n          ) : ('')}\n        </main>\n      </div>\n      <WeatherDetail api={api} lat={lat} lon={lon} time={time}  />\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}